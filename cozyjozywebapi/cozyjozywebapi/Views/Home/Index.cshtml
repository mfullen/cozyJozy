@{
    Layout = null;
    Response.Headers["X-UA-Compatible"] = "IE=10";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>My ASP.NET Application</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <meta name="viewport" content="width=device-width" />
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div data-bind="visible: loading">Loading...</div>
    <div style="display: none" data-bind="visible: true" class="container body-content">
        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <p class="navbar-brand" data-bind="if: !loggedIn()">CozyJozy</p>
                    <a href="#" class="navbar-brand" data-bind="if: loggedIn, click: navigateToHome">CozyJozy</a>
                </div>
                <div data-bind="if: loggedIn" class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        <li><select data-bind="options: availableChildren, optionsText: function(item) { return item.firstName + ' ' + item.middleName + ' ' + item.lastName;}, value: selectedChild"></select></li>
                        <li><a href="#" data-bind="click: navigateToHome">Home</a></li>
                        <li><a href="#" data-bind="click: navigateToChildManagement">Child Management</a></li>
                        <li><a href="#" data-bind="click: navigateToFeeding">Feeding</a></li>
                        <li><a href="#" data-bind="click: navigateToDiaper">Diaper</a></li>
                        <li>@Html.ActionLink("API", "Index", "Help", new { area = "HelpPage" }, null)</li>
                    </ul>
                    <ul class="nav navbar-nav navbar-right" data-bind="with: user">
                        <li>
                            <span class="navbar-text nofloat">Hello, <a href="#" class="navbar-link" data-bind="text: name, click: manage"></a>!</span>
                        </li>
                        <li><a href="#" data-bind="click: logOff">Log off</a></li>
                    </ul>
                </div>
            </div>
        </div>

        <div data-bind="foreach: errors" class="padding-error">
            <p class="text-danger" data-bind="text: $data"></p>
        </div>
        @Html.Partial("_Home")
        @Html.Partial("_ChildMgt")
        @Html.Partial("_Feeding")
        @Html.Partial("_DiaperChanges")
        @Html.Partial("_Login")
        @Html.Partial("_Register")
        @Html.Partial("_RegisterExternal")
        @Html.Partial("_Manage")
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - CozyJozy</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/app")
    @Scripts.Render("~/bundles/bootstrap")

    <script>
        $(document).ready(function () {
            $(document).on('focus', '.datetimepicker', function () {
                $(this).datetimepicker();
            });

            ko.bindingHandlers.datetimepicker = {
                init: function (element, valueAccessor, allBindings) {
                    var options = {
                        format: 'MM/DD/YYYY hh:mm A',
                        defaultDate: ko.unwrap(valueAccessor())
                    };

                    ko.utils.extend(options, allBindings.dateTimePickerOptions);

                    $(element).datetimepicker(options).on("dp.change", function (evntObj) {
                        var observable = valueAccessor();
                        if (evntObj.timeStamp !== undefined) {
                            var picker = $(this).data("DateTimePicker");
                            var d = picker.date();
                            console.log('d', d);

                            var date = d.format(options.format);
                            console.log('date', date);
                            if (ko.isObservable(observable)) {
                                observable(date);
                            }
                        }
                    });
                },
                update: function (element, valueAccessor) {
                    var value = ko.unwrap(valueAccessor());
                    $(element).datetimepicker('date', value || '');
                }
            };


        });
    </script>



</body>
</html>
